{"dependencies":[{"name":"expo-background-fetch","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":57,"index":57}}],"key":"4Nr1o59VIO+Gg5JXPmDg2JUWavo=","exportNames":["*"]}},{"name":"expo-task-manager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":58},"end":{"line":2,"column":49,"index":107}}],"key":"bYMruywqSxptqIFJf3NLT25O6Io=","exportNames":["*"]}},{"name":"expo-notifications","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":108},"end":{"line":3,"column":52,"index":160}}],"key":"nrBDtkRVez7cBhLzyaRjl+xVfvE=","exportNames":["*"]}},{"name":"../store/useStore","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":161},"end":{"line":4,"column":48,"index":209}}],"key":"ASBgiPI21VzTbw57ZrWjZ5L1SH8=","exportNames":["*"]}},{"name":"./notifications","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":210},"end":{"line":5,"column":104,"index":314}}],"key":"//A+ERv2ZA0rWmRT0eAQu8RM/f4=","exportNames":["*"]}},{"name":"./time","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":315},"end":{"line":6,"column":35,"index":350}}],"key":"+ElAa6l83GkHySe2zaICn0rYP5o=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.registerReminderRepairBackgroundTask = registerReminderRepairBackgroundTask;\n  var BackgroundFetch = _interopRequireWildcard(require(_dependencyMap[0], \"expo-background-fetch\"));\n  var TaskManager = _interopRequireWildcard(require(_dependencyMap[1], \"expo-task-manager\"));\n  var Notifications = _interopRequireWildcard(require(_dependencyMap[2], \"expo-notifications\"));\n  var _useStore = require(_dependencyMap[3], \"../store/useStore\");\n  var _notifications = require(_dependencyMap[4], \"./notifications\");\n  var _time = require(_dependencyMap[5], \"./time\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  const TASK_NAME = 'REMINDER_REPAIR_TASK';\n  TaskManager.defineTask(TASK_NAME, async () => {\n    try {\n      // Do not prompt in background; only proceed if permissions already granted\n      const perm = await Notifications.getPermissionsAsync();\n      if (perm.status !== 'granted') {\n        return BackgroundFetch.Result.NoData;\n      }\n      await (0, _notifications.initializeNotifications)();\n      const state = _useStore.useAppStore.getState();\n      const enabledReminders = (state.reminders || []).filter(r => r.enabled);\n      const scheduled = await (0, _notifications.getScheduledNotifications)();\n      const scheduledIds = new Set(scheduled.map(n => n.identifier));\n      let repaired = 0;\n      for (const r of enabledReminders) {\n        const meta = state.notificationMeta[r.id];\n        const time = r.time;\n        const t = (0, _time.parseHHMM)(time);\n        if (!t) continue;\n        const hasValid = meta?.id ? scheduledIds.has(meta.id) : false;\n        if (!hasValid) {\n          const title = r.label || (state.language === 'en' ? 'Reminder' : state.language === 'pl' ? 'Przypomnienie' : 'Erinnerung');\n          const nid = await (0, _notifications.scheduleDailyNext)(r.id, title, '', t.hour, t.minute, 'reminders');\n          if (nid) {\n            state.setNotificationMeta(r.id, {\n              id: nid,\n              time\n            });\n            repaired++;\n          }\n        }\n      }\n      if (repaired > 0) {\n        console.log(`üõ†Ô∏è Reminder repair scheduled ${repaired} missing notifications`);\n        return BackgroundFetch.Result.NewData;\n      }\n      return BackgroundFetch.Result.NoData;\n    } catch (e) {\n      console.error('‚ùå Reminder repair task error', e);\n      return BackgroundFetch.Result.Failed;\n    }\n  });\n  async function registerReminderRepairBackgroundTask(minimumIntervalSeconds = 1800) {\n    try {\n      const status = await BackgroundFetch.getStatusAsync();\n      if (status === BackgroundFetch.Status.Restricted || status === BackgroundFetch.Status.Denied) {\n        console.log('‚ö†Ô∏è BackgroundFetch not available');\n        return;\n      }\n      const tasks = await TaskManager.getRegisteredTasksAsync();\n      const exists = tasks.find(t => t.taskName === TASK_NAME);\n      if (!exists) {\n        await BackgroundFetch.registerTaskAsync(TASK_NAME, {\n          minimumInterval: minimumIntervalSeconds,\n          stopOnTerminate: false,\n          startOnBoot: true\n        });\n        console.log('‚úÖ Registered Reminder repair background task');\n      } else {\n        console.log('‚ÑπÔ∏è Reminder repair background task already registered');\n      }\n    } catch (e) {\n      console.error('‚ùå Error registering background task', e);\n    }\n  }\n});","lineCount":78,"map":[[6,2,1,0],[6,6,1,0,"BackgroundFetch"],[6,21,1,0],[6,24,1,0,"_interopRequireWildcard"],[6,47,1,0],[6,48,1,0,"require"],[6,55,1,0],[6,56,1,0,"_dependencyMap"],[6,70,1,0],[7,2,2,0],[7,6,2,0,"TaskManager"],[7,17,2,0],[7,20,2,0,"_interopRequireWildcard"],[7,43,2,0],[7,44,2,0,"require"],[7,51,2,0],[7,52,2,0,"_dependencyMap"],[7,66,2,0],[8,2,3,0],[8,6,3,0,"Notifications"],[8,19,3,0],[8,22,3,0,"_interopRequireWildcard"],[8,45,3,0],[8,46,3,0,"require"],[8,53,3,0],[8,54,3,0,"_dependencyMap"],[8,68,3,0],[9,2,4,0],[9,6,4,0,"_useStore"],[9,15,4,0],[9,18,4,0,"require"],[9,25,4,0],[9,26,4,0,"_dependencyMap"],[9,40,4,0],[10,2,5,0],[10,6,5,0,"_notifications"],[10,20,5,0],[10,23,5,0,"require"],[10,30,5,0],[10,31,5,0,"_dependencyMap"],[10,45,5,0],[11,2,6,0],[11,6,6,0,"_time"],[11,11,6,0],[11,14,6,0,"require"],[11,21,6,0],[11,22,6,0,"_dependencyMap"],[11,36,6,0],[12,2,6,35],[12,11,6,35,"_interopRequireWildcard"],[12,35,6,35,"e"],[12,36,6,35],[12,38,6,35,"t"],[12,39,6,35],[12,68,6,35,"WeakMap"],[12,75,6,35],[12,81,6,35,"r"],[12,82,6,35],[12,89,6,35,"WeakMap"],[12,96,6,35],[12,100,6,35,"n"],[12,101,6,35],[12,108,6,35,"WeakMap"],[12,115,6,35],[12,127,6,35,"_interopRequireWildcard"],[12,150,6,35],[12,162,6,35,"_interopRequireWildcard"],[12,163,6,35,"e"],[12,164,6,35],[12,166,6,35,"t"],[12,167,6,35],[12,176,6,35,"t"],[12,177,6,35],[12,181,6,35,"e"],[12,182,6,35],[12,186,6,35,"e"],[12,187,6,35],[12,188,6,35,"__esModule"],[12,198,6,35],[12,207,6,35,"e"],[12,208,6,35],[12,214,6,35,"o"],[12,215,6,35],[12,217,6,35,"i"],[12,218,6,35],[12,220,6,35,"f"],[12,221,6,35],[12,226,6,35,"__proto__"],[12,235,6,35],[12,243,6,35,"default"],[12,250,6,35],[12,252,6,35,"e"],[12,253,6,35],[12,270,6,35,"e"],[12,271,6,35],[12,294,6,35,"e"],[12,295,6,35],[12,320,6,35,"e"],[12,321,6,35],[12,330,6,35,"f"],[12,331,6,35],[12,337,6,35,"o"],[12,338,6,35],[12,341,6,35,"t"],[12,342,6,35],[12,345,6,35,"n"],[12,346,6,35],[12,349,6,35,"r"],[12,350,6,35],[12,358,6,35,"o"],[12,359,6,35],[12,360,6,35,"has"],[12,363,6,35],[12,364,6,35,"e"],[12,365,6,35],[12,375,6,35,"o"],[12,376,6,35],[12,377,6,35,"get"],[12,380,6,35],[12,381,6,35,"e"],[12,382,6,35],[12,385,6,35,"o"],[12,386,6,35],[12,387,6,35,"set"],[12,390,6,35],[12,391,6,35,"e"],[12,392,6,35],[12,394,6,35,"f"],[12,395,6,35],[12,411,6,35,"t"],[12,412,6,35],[12,416,6,35,"e"],[12,417,6,35],[12,433,6,35,"t"],[12,434,6,35],[12,441,6,35,"hasOwnProperty"],[12,455,6,35],[12,456,6,35,"call"],[12,460,6,35],[12,461,6,35,"e"],[12,462,6,35],[12,464,6,35,"t"],[12,465,6,35],[12,472,6,35,"i"],[12,473,6,35],[12,477,6,35,"o"],[12,478,6,35],[12,481,6,35,"Object"],[12,487,6,35],[12,488,6,35,"defineProperty"],[12,502,6,35],[12,507,6,35,"Object"],[12,513,6,35],[12,514,6,35,"getOwnPropertyDescriptor"],[12,538,6,35],[12,539,6,35,"e"],[12,540,6,35],[12,542,6,35,"t"],[12,543,6,35],[12,550,6,35,"i"],[12,551,6,35],[12,552,6,35,"get"],[12,555,6,35],[12,559,6,35,"i"],[12,560,6,35],[12,561,6,35,"set"],[12,564,6,35],[12,568,6,35,"o"],[12,569,6,35],[12,570,6,35,"f"],[12,571,6,35],[12,573,6,35,"t"],[12,574,6,35],[12,576,6,35,"i"],[12,577,6,35],[12,581,6,35,"f"],[12,582,6,35],[12,583,6,35,"t"],[12,584,6,35],[12,588,6,35,"e"],[12,589,6,35],[12,590,6,35,"t"],[12,591,6,35],[12,602,6,35,"f"],[12,603,6,35],[12,608,6,35,"e"],[12,609,6,35],[12,611,6,35,"t"],[12,612,6,35],[13,2,8,0],[13,8,8,6,"TASK_NAME"],[13,17,8,15],[13,20,8,18],[13,42,8,40],[14,2,10,0,"TaskManager"],[14,13,10,11],[14,14,10,12,"defineTask"],[14,24,10,22],[14,25,10,23,"TASK_NAME"],[14,34,10,32],[14,36,10,34],[14,48,10,46],[15,4,11,2],[15,8,11,6],[16,6,12,4],[17,6,13,4],[17,12,13,10,"perm"],[17,16,13,14],[17,19,13,17],[17,25,13,23,"Notifications"],[17,38,13,36],[17,39,13,37,"getPermissionsAsync"],[17,58,13,56],[17,59,13,57],[17,60,13,58],[18,6,14,4],[18,10,14,8,"perm"],[18,14,14,12],[18,15,14,13,"status"],[18,21,14,19],[18,26,14,24],[18,35,14,33],[18,37,14,35],[19,8,15,6],[19,15,15,13,"BackgroundFetch"],[19,30,15,28],[19,31,15,29,"Result"],[19,37,15,35],[19,38,15,36,"NoData"],[19,44,15,42],[20,6,16,4],[21,6,17,4],[21,12,17,10],[21,16,17,10,"initializeNotifications"],[21,54,17,33],[21,56,17,34],[21,57,17,35],[22,6,19,4],[22,12,19,10,"state"],[22,17,19,15],[22,20,19,18,"useAppStore"],[22,41,19,29],[22,42,19,30,"getState"],[22,50,19,38],[22,51,19,39],[22,52,19,40],[23,6,20,4],[23,12,20,10,"enabledReminders"],[23,28,20,26],[23,31,20,29],[23,32,20,30,"state"],[23,37,20,35],[23,38,20,36,"reminders"],[23,47,20,45],[23,51,20,49],[23,53,20,51],[23,55,20,53,"filter"],[23,61,20,59],[23,62,20,61,"r"],[23,63,20,62],[23,67,20,67,"r"],[23,68,20,68],[23,69,20,69,"enabled"],[23,76,20,76],[23,77,20,77],[24,6,22,4],[24,12,22,10,"scheduled"],[24,21,22,19],[24,24,22,22],[24,30,22,28],[24,34,22,28,"getScheduledNotifications"],[24,74,22,53],[24,76,22,54],[24,77,22,55],[25,6,23,4],[25,12,23,10,"scheduledIds"],[25,24,23,22],[25,27,23,25],[25,31,23,29,"Set"],[25,34,23,32],[25,35,23,33,"scheduled"],[25,44,23,42],[25,45,23,43,"map"],[25,48,23,46],[25,49,23,48,"n"],[25,50,23,54],[25,54,23,59,"n"],[25,55,23,60],[25,56,23,61,"identifier"],[25,66,23,71],[25,67,23,72],[25,68,23,73],[26,6,25,4],[26,10,25,8,"repaired"],[26,18,25,16],[26,21,25,19],[26,22,25,20],[27,6,26,4],[27,11,26,9],[27,17,26,15,"r"],[27,18,26,16],[27,22,26,20,"enabledReminders"],[27,38,26,36],[27,40,26,38],[28,8,27,6],[28,14,27,12,"meta"],[28,18,27,16],[28,21,27,19,"state"],[28,26,27,24],[28,27,27,25,"notificationMeta"],[28,43,27,41],[28,44,27,42,"r"],[28,45,27,43],[28,46,27,44,"id"],[28,48,27,46],[28,49,27,47],[29,8,28,6],[29,14,28,12,"time"],[29,18,28,16],[29,21,28,19,"r"],[29,22,28,20],[29,23,28,21,"time"],[29,27,28,25],[30,8,29,6],[30,14,29,12,"t"],[30,15,29,13],[30,18,29,16],[30,22,29,16,"parseHHMM"],[30,37,29,25],[30,39,29,26,"time"],[30,43,29,30],[30,44,29,31],[31,8,30,6],[31,12,30,10],[31,13,30,11,"t"],[31,14,30,12],[31,16,30,14],[32,8,31,6],[32,14,31,12,"hasValid"],[32,22,31,20],[32,25,31,23,"meta"],[32,29,31,27],[32,31,31,29,"id"],[32,33,31,31],[32,36,31,34,"scheduledIds"],[32,48,31,46],[32,49,31,47,"has"],[32,52,31,50],[32,53,31,51,"meta"],[32,57,31,55],[32,58,31,56,"id"],[32,60,31,58],[32,61,31,59],[32,64,31,62],[32,69,31,67],[33,8,32,6],[33,12,32,10],[33,13,32,11,"hasValid"],[33,21,32,19],[33,23,32,21],[34,10,33,8],[34,16,33,14,"title"],[34,21,33,19],[34,24,33,22,"r"],[34,25,33,23],[34,26,33,24,"label"],[34,31,33,29],[34,36,33,34,"state"],[34,41,33,39],[34,42,33,40,"language"],[34,50,33,48],[34,55,33,51],[34,59,33,55],[34,62,33,58],[34,72,33,68],[34,75,33,72,"state"],[34,80,33,77],[34,81,33,78,"language"],[34,89,33,86],[34,94,33,89],[34,98,33,93],[34,101,33,96],[34,116,33,111],[34,119,33,114],[34,131,33,127],[34,132,33,128],[35,10,34,8],[35,16,34,14,"nid"],[35,19,34,17],[35,22,34,20],[35,28,34,26],[35,32,34,26,"scheduleDailyNext"],[35,64,34,43],[35,66,34,44,"r"],[35,67,34,45],[35,68,34,46,"id"],[35,70,34,48],[35,72,34,50,"title"],[35,77,34,55],[35,79,34,57],[35,81,34,59],[35,83,34,61,"t"],[35,84,34,62],[35,85,34,63,"hour"],[35,89,34,67],[35,91,34,69,"t"],[35,92,34,70],[35,93,34,71,"minute"],[35,99,34,77],[35,101,34,79],[35,112,34,90],[35,113,34,91],[36,10,35,8],[36,14,35,12,"nid"],[36,17,35,15],[36,19,35,17],[37,12,35,19,"state"],[37,17,35,24],[37,18,35,25,"setNotificationMeta"],[37,37,35,44],[37,38,35,45,"r"],[37,39,35,46],[37,40,35,47,"id"],[37,42,35,49],[37,44,35,51],[38,14,35,53,"id"],[38,16,35,55],[38,18,35,57,"nid"],[38,21,35,60],[39,14,35,62,"time"],[40,12,35,67],[40,13,35,68],[40,14,35,69],[41,12,35,71,"repaired"],[41,20,35,79],[41,22,35,81],[42,10,35,83],[43,8,36,6],[44,6,37,4],[45,6,39,4],[45,10,39,8,"repaired"],[45,18,39,16],[45,21,39,19],[45,22,39,20],[45,24,39,22],[46,8,40,6,"console"],[46,15,40,13],[46,16,40,14,"log"],[46,19,40,17],[46,20,40,18],[46,53,40,51,"repaired"],[46,61,40,59],[46,85,40,83],[46,86,40,84],[47,8,41,6],[47,15,41,13,"BackgroundFetch"],[47,30,41,28],[47,31,41,29,"Result"],[47,37,41,35],[47,38,41,36,"NewData"],[47,45,41,43],[48,6,42,4],[49,6,43,4],[49,13,43,11,"BackgroundFetch"],[49,28,43,26],[49,29,43,27,"Result"],[49,35,43,33],[49,36,43,34,"NoData"],[49,42,43,40],[50,4,44,2],[50,5,44,3],[50,6,44,4],[50,13,44,11,"e"],[50,14,44,12],[50,16,44,14],[51,6,45,4,"console"],[51,13,45,11],[51,14,45,12,"error"],[51,19,45,17],[51,20,45,18],[51,50,45,48],[51,52,45,50,"e"],[51,53,45,51],[51,54,45,52],[52,6,46,4],[52,13,46,11,"BackgroundFetch"],[52,28,46,26],[52,29,46,27,"Result"],[52,35,46,33],[52,36,46,34,"Failed"],[52,42,46,40],[53,4,47,2],[54,2,48,0],[54,3,48,1],[54,4,48,2],[55,2,50,7],[55,17,50,22,"registerReminderRepairBackgroundTask"],[55,53,50,58,"registerReminderRepairBackgroundTask"],[55,54,50,59,"minimumIntervalSeconds"],[55,76,50,89],[55,79,50,92],[55,83,50,96],[55,85,50,98],[56,4,51,2],[56,8,51,6],[57,6,52,4],[57,12,52,10,"status"],[57,18,52,16],[57,21,52,19],[57,27,52,25,"BackgroundFetch"],[57,42,52,40],[57,43,52,41,"getStatusAsync"],[57,57,52,55],[57,58,52,56],[57,59,52,57],[58,6,53,4],[58,10,53,8,"status"],[58,16,53,14],[58,21,53,19,"BackgroundFetch"],[58,36,53,34],[58,37,53,35,"Status"],[58,43,53,41],[58,44,53,42,"Restricted"],[58,54,53,52],[58,58,53,56,"status"],[58,64,53,62],[58,69,53,67,"BackgroundFetch"],[58,84,53,82],[58,85,53,83,"Status"],[58,91,53,89],[58,92,53,90,"Denied"],[58,98,53,96],[58,100,53,98],[59,8,54,6,"console"],[59,15,54,13],[59,16,54,14,"log"],[59,19,54,17],[59,20,54,18],[59,54,54,52],[59,55,54,53],[60,8,55,6],[61,6,56,4],[62,6,57,4],[62,12,57,10,"tasks"],[62,17,57,15],[62,20,57,18],[62,26,57,24,"TaskManager"],[62,37,57,35],[62,38,57,36,"getRegisteredTasksAsync"],[62,61,57,59],[62,62,57,60],[62,63,57,61],[63,6,58,4],[63,12,58,10,"exists"],[63,18,58,16],[63,21,58,19,"tasks"],[63,26,58,24],[63,27,58,25,"find"],[63,31,58,29],[63,32,58,31,"t"],[63,33,58,32],[63,37,58,37,"t"],[63,38,58,38],[63,39,58,39,"taskName"],[63,47,58,47],[63,52,58,52,"TASK_NAME"],[63,61,58,61],[63,62,58,62],[64,6,59,4],[64,10,59,8],[64,11,59,9,"exists"],[64,17,59,15],[64,19,59,17],[65,8,60,6],[65,14,60,12,"BackgroundFetch"],[65,29,60,27],[65,30,60,28,"registerTaskAsync"],[65,47,60,45],[65,48,60,46,"TASK_NAME"],[65,57,60,55],[65,59,60,57],[66,10,60,59,"minimumInterval"],[66,25,60,74],[66,27,60,76,"minimumIntervalSeconds"],[66,49,60,98],[67,10,60,100,"stopOnTerminate"],[67,25,60,115],[67,27,60,117],[67,32,60,122],[68,10,60,124,"startOnBoot"],[68,21,60,135],[68,23,60,137],[69,8,60,142],[69,9,60,143],[69,10,60,144],[70,8,61,6,"console"],[70,15,61,13],[70,16,61,14,"log"],[70,19,61,17],[70,20,61,18],[70,66,61,64],[70,67,61,65],[71,6,62,4],[71,7,62,5],[71,13,62,11],[72,8,63,6,"console"],[72,15,63,13],[72,16,63,14,"log"],[72,19,63,17],[72,20,63,18],[72,75,63,73],[72,76,63,74],[73,6,64,4],[74,4,65,2],[74,5,65,3],[74,6,65,4],[74,13,65,11,"e"],[74,14,65,12],[74,16,65,14],[75,6,65,16,"console"],[75,13,65,23],[75,14,65,24,"error"],[75,19,65,29],[75,20,65,30],[75,57,65,67],[75,59,65,69,"e"],[75,60,65,70],[75,61,65,71],[76,4,65,73],[77,2,66,0],[78,0,66,1],[78,3]],"functionMap":{"names":["<global>","TaskManager.defineTask$argument_1","filter$argument_0","scheduled.map$argument_0","registerReminderRepairBackgroundTask","tasks.find$argument_0"],"mappings":"AAA;kCCS;4DCU,gBD;+CEG,wBF;CDyB;OIE;8BCQ,+BD"}},"type":"js/module"}]}